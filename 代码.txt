include<stdio.h> 
#include<stdlib.h>    
#define max 10   
typedef struct //定义结构体 （跳舞人的信息） 
{       
	char name[20];         //定义一个长度为20的字符串，用来表示姓名     
	char sex;               //定义一个char变量sex，用来表示性别,规定m表示男性，f 表示女性                             
}person;    
typedef struct //定义循环队列结构体队列  
{   
	person *Base;     //储存空间基址      
	int front;               //头指针，若队列不空，指向队列头元素      
	int rear;                //尾指针，若队列不空，指向队列尾元素的下一个位置 
}queue;    
void init_queue(queue *q) //初始化循环队列 
{   
	q->Base =(person *)malloc(sizeof(person)*max);   //动态创建储存空间基址  
	if(!q->Base )    //创建失败，退出程序！  
	{   
		printf("动态创建失败，程序终止！");  
		exit(-1);  
	}      
	q->front=q->rear=0;         
}  
bool full_queue(queue *q)   //判断循环队列是否为满 
{//当尾指针的下一个位置等于头指针时，队列为满  // 为满返回true，否则返回false  
	if((q->rear+1)%max == q->front )   
		return true;  
	else   
		return false; 
}  
bool empty_queue(queue *q)//判断循环队列是否为空 
{//当头指针位置等于尾指针时，循环队列为空，  //为空返回true，否则返回false  
	if(q->front == q->rear )   
		return true;  
	else   
		return false; 
}  
void en_queue(queue *q,person p)//进队函数，使p进入队列 
{     
	if(full_queue(q))//判断是否为满  
	{   
	printf("队列已满，无法实现进队操作，程序终止！");   
	exit(-1);  
	}  
	else             //不满进行操作  
    {   
	q->Base[q->rear] = p;   
	q->rear=(q->rear+1)%max; //尾指针指向下一个位置  
	} 
}  
person de_queue(queue *q)//出队函数，用p返回出队值 
{  
	person p;       
	if(empty_queue(q))//判断是否为空  
	{   
		printf("队列为空，无法实现出队操作，程序终止！");   
		exit(-1); 
	}  
	else   //不为空进行操作  
	{          
		p=q->Base[q->front];          
		q->front=(q->front+1)%max;         
		return p;  
	}  
}  
int length_queue(queue *q)//求循环队列元素个数 
{  
	return q->rear-q->front;  //尾指针位置减去头指针位置即可 
}  
person queue_front(queue *q)//访问队头元素，并返回 
{   
	if(empty_queue(q))//判断是否为空  
{   
	printf("队列为空，操作失败！");   
	exit(-1);  
}   
return q->Base[q->front];  
}   
void dancepartners(queue femaledancer,queue maledancer,int lun)//舞伴配对函数  
{   
	int m = length_queue(&femaledancer);   //计算女队人数  
	int n = length_queue(&maledancer);     //计算男队人数  
	for(int j = 1;j<=lun;++j)              //for循环表示舞会进行的轮数情况  
	{//通过对男女队人数的比较，进行一下操作      
		if(m>n)// 女队人数多于男队，女队有剩余队员   
		{    
			person p;          
			person q;    
			person s;    
			printf("------------------------");    
			printf("第%d轮配对情况：\n",j);    
			for(int i =1;i<=n;++i ) //for循环实现配对操作    
			{        
				p=de_queue(&maledancer);       
				q=de_queue(&femaledancer); //出队的男女舞伴                   
				printf("男:%s",p.name);          
				printf("和女:%s配对成功\n",q.name);//输出配对情况      
				en_queue(&maledancer,p);            
				en_queue(&femaledancer,q); //将出队的男女舞伴重新进队       
			}    //输出女队剩余队员情况,并输出在下一轮首先出场的队员姓名       
			printf("女队中还有%d个人在等待!\n",m-n);                    
			s=queue_front(&femaledancer);                                                             
			printf("女队中第一个等待的是：%s\n",s.name);    
		} 
		
     else if(m<n) //男队人数多于女队，男队有剩余队员   
	 {       
		 person p;          
		 person q;    
		 person s;    
		 printf("------------------------");             
		 printf("第%d轮配对情况：\n",j);       
		 for(int i =1;i<=m;++i )    
		 {            
			 p=de_queue(&maledancer);     
			 q=de_queue(&femaledancer);//出队的男女舞伴                   
			 printf("男:%s",p.name);                   
			 printf("和女:%s配对成功\n",q.name);//输出配对情况      
			 en_queue(&maledancer,p);                  
			 en_queue(&femaledancer,q); //将出队的男女舞伴重新进队                   
		 }    //输出男队剩余队员情况,并输出在下一轮首先出场的队员姓名       
		 printf("男队中还有%d个人在等待!\n",n-m);              
		 s=queue_front(&maledancer);               
		 printf("男队中第一个等待的是：%s\n",s.name);      
		}         
	 else //男女队人数相等，没有剩余队员   
	 {    
		 person p;         
		 person q;   
		 person s;    
		 printf("------------------------");    
		 printf("第%d轮配对情况：\n",j);       
		 for(int i =1;i<=m; ++i)    
		 {    
			 p=de_queue(&maledancer);      
			 q=de_queue(&femaledancer); //出队的男女舞伴                   
			 printf("男:%s",p.name);      
			 printf("和女:%s配对成功\n",q.name);//输出配对情况      
			 en_queue(&maledancer,p);                  
			 en_queue(&femaledancer,q);//将出队的男女舞伴重新进队    
		 }              
		 printf("没有人剩余!\n");
		 }  
	} 
}   
int main()  
{   
	printf("欢迎使用舞伴配对程序！\n");
	person p,dancers[max];   //键盘输入男女舞者的信息，包括姓名，性别     
	int i,num;       
	printf("请输入男女dancer的总人数:\n");      
	scanf("%d",&num);       
	printf("请输入姓名和性别（用m表示男性，用f表示女性），如: \nzhangsan\nm\n");      
	for(i=0;i<num;i++)   
	{   
		scanf("%s",&dancers[i].name);          
		getchar();           
		scanf("%c",&dancers[i].sex);           
		if(dancers[i].sex!='f'&&dancers[i].sex!='m')//判断输入信息是否合法          
			printf("第%d个人的信息有误,请重新输入",(i--)+1);   
	}       
	queue maledancer,femaledancer;//定义两个循环队列结构体       
	init_queue(&maledancer);//调用init_queue()函数置空队列maledancer表示男队      
	init_queue(&femaledancer);//调用init_queue()函数置空队列femaledancer表示女队      
	for(i=0;i<num;i++)   
	{    
		p=dancers[i];//结构体整体赋值          
		if(p.sex=='f')//女的进队列femaledancer   
		{     
			en_queue(&femaledancer,p);              
			printf("%s进女队\n",p.name);  
                }           
		else//男的进队列maledancer    
		{               
			en_queue(&maledancer,p);              
			printf("%s进男队\n",p.name);    
		}   
	}     
	int n;  
	printf("请输入要进行的轮数：\n");  
	scanf("%d",&n);      
	dancepartners(femaledancer,maledancer,n);      
	system("pause");
	return 0;
}